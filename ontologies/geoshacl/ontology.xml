<?xml version="1.0"?>
<rdf:RDF xmlns="https://w3id.org/geoshacl#"
     xml:base="https://w3id.org/geoshacl"
     xmlns:owl="http://www.w3.org/2002/07/owl#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:xml="http://www.w3.org/XML/1998/namespace"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:bibo="http://purl.org/ontology/bibo/"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     xmlns:vann="http://purl.org/vocab/vann/"
     xmlns:shacl="http://www.w3.org/ns/shacl#"
     xmlns:terms="http://purl.org/dc/terms/">
    <owl:Ontology rdf:about="https://w3id.org/geoshacl">
        <terms:abstract>Reusable SHACL constraint components for geospatial data based on GeoSPARQL.</terms:abstract>
        <terms:contributor>Kris McGlinn</terms:contributor>
        <terms:created rdf:datatype="http://www.w3.org/2001/XMLSchema#date">2021-03-04</terms:created>
        <terms:creator>Christophe Debruyne</terms:creator>
        <terms:description>Reusable SHACL constraint components for geospatial data based on GeoSPARQL.</terms:description>
        <terms:license rdf:resource="https://creativecommons.org/licenses/by/4.0/"/>
        <terms:publisher>ADAPT Centre, Trinity College</terms:publisher>
        <terms:title>GeoSHACL</terms:title>
        <bibo:status rdf:resource="http://purl.org/ontology/bibo/status/draft"/>
        <vann:preferredNamespacePrefix>geosh</vann:preferredNamespacePrefix>
        <vann:preferredNamespaceUri rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI">https://w3id.org/geoshacl</vann:preferredNamespaceUri>
    </owl:Ontology>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Annotation properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->


    


    <!-- http://purl.org/dc/terms/abstract -->


    <owl:AnnotationProperty rdf:about="http://purl.org/dc/terms/abstract"/>
    


    <!-- http://purl.org/dc/terms/contributor -->


    <owl:AnnotationProperty rdf:about="http://purl.org/dc/terms/contributor"/>
    


    <!-- http://purl.org/dc/terms/created -->


    <owl:AnnotationProperty rdf:about="http://purl.org/dc/terms/created"/>
    


    <!-- http://purl.org/dc/terms/creator -->


    <owl:AnnotationProperty rdf:about="http://purl.org/dc/terms/creator"/>
    


    <!-- http://purl.org/dc/terms/description -->


    <owl:AnnotationProperty rdf:about="http://purl.org/dc/terms/description"/>
    


    <!-- http://purl.org/dc/terms/license -->


    <owl:AnnotationProperty rdf:about="http://purl.org/dc/terms/license"/>
    


    <!-- http://purl.org/dc/terms/publisher -->


    <owl:AnnotationProperty rdf:about="http://purl.org/dc/terms/publisher"/>
    


    <!-- http://purl.org/dc/terms/title -->


    <owl:AnnotationProperty rdf:about="http://purl.org/dc/terms/title"/>
    


    <!-- http://purl.org/ontology/bibo/status -->


    <owl:AnnotationProperty rdf:about="http://purl.org/ontology/bibo/status"/>
    


    <!-- http://purl.org/vocab/vann/preferredNamespacePrefix -->


    <owl:AnnotationProperty rdf:about="http://purl.org/vocab/vann/preferredNamespacePrefix"/>
    


    <!-- http://purl.org/vocab/vann/preferredNamespaceUri -->


    <owl:AnnotationProperty rdf:about="http://purl.org/vocab/vann/preferredNamespaceUri"/>
    


    <!-- http://www.w3.org/ns/shacl#ask -->


    <owl:AnnotationProperty rdf:about="http://www.w3.org/ns/shacl#ask"/>
    


    <!-- http://www.w3.org/ns/shacl#message -->


    <owl:AnnotationProperty rdf:about="http://www.w3.org/ns/shacl#message"/>
    


    <!-- http://www.w3.org/ns/shacl#parameter -->


    <owl:AnnotationProperty rdf:about="http://www.w3.org/ns/shacl#parameter"/>
    


    <!-- http://www.w3.org/ns/shacl#path -->


    <owl:AnnotationProperty rdf:about="http://www.w3.org/ns/shacl#path"/>
    


    <!-- http://www.w3.org/ns/shacl#validator -->


    <owl:AnnotationProperty rdf:about="http://www.w3.org/ns/shacl#validator"/>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Classes
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->


    


    <!-- http://www.w3.org/ns/shacl#ConstraintComponent -->


    <owl:Class rdf:about="http://www.w3.org/ns/shacl#ConstraintComponent"/>
    


    <!-- http://www.w3.org/ns/shacl#SPARQLAskValidator -->


    <owl:Class rdf:about="http://www.w3.org/ns/shacl#SPARQLAskValidator"/>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Individuals
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->


    


    <!-- http://foo.bar/geoshacl#containsConstraint -->


    <owl:NamedIndividual rdf:about="http://foo.bar/geoshacl#containsConstraint">
        <rdf:type rdf:resource="http://www.w3.org/ns/shacl#ConstraintComponent"/>
        <rdfs:comment>An implementation of the &quot;contains&quot; relationship between two geometries as per the Simple Feature Access standard. It is implemented using GeoSPARQL&apos;s geof:sfContains filter function.</rdfs:comment>
        <shacl:parameter>
            <rdf:Description>
                <shacl:path rdf:resource="http://foo.bar/geoshacl#contains"/>
            </rdf:Description>
        </shacl:parameter>
        <shacl:validator rdf:nodeID="genid2"/>
    </owl:NamedIndividual>
    <rdf:Description rdf:nodeID="genid2">
        <rdf:type rdf:resource="http://www.w3.org/ns/shacl#SPARQLAskValidator"/>
        <shacl:ask>
            PREFIX geo: &lt;http://www.opengis.net/ont/geosparql#&gt;
            PREFIX geof: &lt;http://www.opengis.net/def/function/geosparql/&gt;
            ASK {
				{
    	        	FILTER( geof:sfContains($value, $contains) )
        	    }
        	    UNION
        	    {
        	    	FILTER( isIRI($contains) )
        	    	$this $contains ?otherValue .
        	    	FILTER( geof:sfContains($value, ?otherValue) )
        	    }
            }
        </shacl:ask>
        <shacl:message>Value does not contain {$contains}.</shacl:message>
    </rdf:Description>
    


    <!-- http://foo.bar/geoshacl#crossesConstraint -->


    <owl:NamedIndividual rdf:about="http://foo.bar/geoshacl#crossesConstraint">
        <rdf:type rdf:resource="http://www.w3.org/ns/shacl#ConstraintComponent"/>
        <rdfs:comment>An implementation of the &quot;crosses&quot; relationship between two geometries as per the Simple Feature Access standard. It is implemented using GeoSPARQL&apos;s geof:sfCrosses filter function.</rdfs:comment>
        <shacl:parameter>
            <rdf:Description>
                <shacl:path rdf:resource="http://foo.bar/geoshacl#crosses"/>
            </rdf:Description>
        </shacl:parameter>
        <shacl:validator rdf:nodeID="genid4"/>
    </owl:NamedIndividual>
    <rdf:Description rdf:nodeID="genid4">
        <rdf:type rdf:resource="http://www.w3.org/ns/shacl#SPARQLAskValidator"/>
        <shacl:ask>
            PREFIX geo: &lt;http://www.opengis.net/ont/geosparql#&gt;
            PREFIX geof: &lt;http://www.opengis.net/def/function/geosparql/&gt;
            ASK {
				{
    	        	FILTER( geof:sfCrosses($value, $crosses) )
        	    }
        	    UNION
        	    {
        	    	FILTER( isIRI($crosses) )
        	    	$this $crosses ?otherValue .
        	    	FILTER( geof:sfCrosses($value, ?otherValue) )
        	    }
            }
        </shacl:ask>
        <shacl:message>Value does not cross {$crosses}.</shacl:message>
    </rdf:Description>
    


    <!-- http://foo.bar/geoshacl#disjointConstraint -->


    <owl:NamedIndividual rdf:about="http://foo.bar/geoshacl#disjointConstraint">
        <rdf:type rdf:resource="http://www.w3.org/ns/shacl#ConstraintComponent"/>
        <rdfs:comment>An implementation of the &quot;disjoint&quot; relationship between two geometries as per the Simple Feature Access standard. It is implemented using GeoSPARQL&apos;s geof:sfDisjoint filter function.</rdfs:comment>
        <shacl:parameter>
            <rdf:Description>
                <shacl:path rdf:resource="http://foo.bar/geoshacl#disjoint"/>
            </rdf:Description>
        </shacl:parameter>
        <shacl:validator rdf:nodeID="genid6"/>
    </owl:NamedIndividual>
    <rdf:Description rdf:nodeID="genid6">
        <rdf:type rdf:resource="http://www.w3.org/ns/shacl#SPARQLAskValidator"/>
        <shacl:ask>
            PREFIX geo: &lt;http://www.opengis.net/ont/geosparql#&gt;
            PREFIX geof: &lt;http://www.opengis.net/def/function/geosparql/&gt;
            ASK {
				{
    	        	FILTER( geof:sfDisjoint($value, $disjoint) )
        	    }
        	    UNION
        	    {
        	    	FILTER( isIRI($disjoint) )
        	    	$this $disjoint ?otherValue .
        	    	FILTER( geof:sfDisjoint($value, ?otherValue) )
        	    }
            }
        </shacl:ask>
        <shacl:message>Value is not disjoint with {$disjoint}.</shacl:message>
    </rdf:Description>
    


    <!-- http://foo.bar/geoshacl#equalsConstraint -->


    <owl:NamedIndividual rdf:about="http://foo.bar/geoshacl#equalsConstraint">
        <rdf:type rdf:resource="http://www.w3.org/ns/shacl#ConstraintComponent"/>
        <rdfs:comment>An implementation of the &quot;equals&quot; relationship between two geometries as per the Simple Feature Access standard. It is implemented using GeoSPARQL&apos;s geof:sfEquals filter function.</rdfs:comment>
        <shacl:parameter>
            <rdf:Description>
                <shacl:path rdf:resource="http://foo.bar/geoshacl#equals"/>
            </rdf:Description>
        </shacl:parameter>
        <shacl:validator rdf:nodeID="genid8"/>
    </owl:NamedIndividual>
    <rdf:Description rdf:nodeID="genid8">
        <rdf:type rdf:resource="http://www.w3.org/ns/shacl#SPARQLAskValidator"/>
        <shacl:ask>
            PREFIX geo: &lt;http://www.opengis.net/ont/geosparql#&gt;
            PREFIX geof: &lt;http://www.opengis.net/def/function/geosparql/&gt;
            ASK {
				{
    	        	FILTER( geof:sfEquals($value, $equals) )
        	    }
        	    UNION
        	    {
        	    	FILTER( isIRI($equals) )
        	    	$this $equals ?otherValue .
        	    	FILTER( geof:sfEquals($value, ?otherValue) )
        	    }
            }
        </shacl:ask>
        <shacl:message>Value is not equal to {$equals} (note: points cannot be equal as per GeoSPARQL)</shacl:message>
    </rdf:Description>
    


    <!-- http://foo.bar/geoshacl#intersectsConstraint -->


    <owl:NamedIndividual rdf:about="http://foo.bar/geoshacl#intersectsConstraint">
        <rdf:type rdf:resource="http://www.w3.org/ns/shacl#ConstraintComponent"/>
        <rdfs:comment>An implementation of the &quot;intersects&quot; relationship between two geometries as per the Simple Feature Access standard. It is implemented using GeoSPARQL&apos;s geof:sfIntersects filter function.</rdfs:comment>
        <shacl:parameter>
            <rdf:Description>
                <shacl:path rdf:resource="http://foo.bar/geoshacl#intersects"/>
            </rdf:Description>
        </shacl:parameter>
        <shacl:validator rdf:nodeID="genid10"/>
    </owl:NamedIndividual>
    <rdf:Description rdf:nodeID="genid10">
        <rdf:type rdf:resource="http://www.w3.org/ns/shacl#SPARQLAskValidator"/>
        <shacl:ask>
            PREFIX geo: &lt;http://www.opengis.net/ont/geosparql#&gt;
            PREFIX geof: &lt;http://www.opengis.net/def/function/geosparql/&gt;
            ASK {
				{
    	        	FILTER( geof:sfIntersects($value, $intersects) )
        	    }
        	    UNION
        	    {
        	    	FILTER( isIRI($intersects) )
        	    	$this $intersects ?otherValue .
        	    	FILTER( geof:sfIntersects($value, ?otherValue) )
        	    }
            }
        </shacl:ask>
        <shacl:message>Value does not intersect with {$intersects}.</shacl:message>
    </rdf:Description>
    


    <!-- http://foo.bar/geoshacl#intuitiveEqualsConstraint -->


    <owl:NamedIndividual rdf:about="http://foo.bar/geoshacl#intuitiveEqualsConstraint">
        <rdf:type rdf:resource="http://www.w3.org/ns/shacl#ConstraintComponent"/>
        <rdfs:comment>An alternative implementation of the &quot;equals&quot; relationship between two geometries. The Simple Features Access and GeoSPARQL assume that two points can never be equivalent as their boundaries are empty and geometries must share the same non-empty boundary. This can be counter-intuitive. This implementation of &quot;equals&quot; is based on GeoSPARQL&apos;s sf:within and sf:contains filter functions.</rdfs:comment>
        <shacl:parameter>
            <rdf:Description>
                <shacl:path rdf:resource="http://foo.bar/geoshacl#intuitiveEquals"/>
            </rdf:Description>
        </shacl:parameter>
        <shacl:validator rdf:nodeID="genid12"/>
    </owl:NamedIndividual>
    <rdf:Description rdf:nodeID="genid12">
        <rdf:type rdf:resource="http://www.w3.org/ns/shacl#SPARQLAskValidator"/>
        <shacl:ask>
            PREFIX geo: &lt;http://www.opengis.net/ont/geosparql#&gt;
            PREFIX geof: &lt;http://www.opengis.net/def/function/geosparql/&gt;
            ASK {            
				{
    	        	FILTER( geof:sfWithin($value, $intuitiveEquals) )
    	        	FILTER( geof:sfContains($value, $intuitiveEquals) )
        	    }
        	    UNION
        	    {
        	    	FILTER( isIRI($intuitiveEquals) )
        	    	$this $intuitiveEquals ?otherValue .
        	    	FILTER( geof:sfWithin($value, ?otherValue) )
    	        	FILTER( geof:sfContains($value, ?otherValue) )
        	    }
            }
        </shacl:ask>
        <shacl:message>Value is not intuitively equal to {$intuitiveEquals}</shacl:message>
    </rdf:Description>
    


    <!-- http://foo.bar/geoshacl#overlapsConstraint -->


    <owl:NamedIndividual rdf:about="http://foo.bar/geoshacl#overlapsConstraint">
        <rdf:type rdf:resource="http://www.w3.org/ns/shacl#ConstraintComponent"/>
        <rdfs:comment>An implementation of the &quot;overlaps&quot; relationship between two geometries as per the Simple Feature Access standard. It is implemented using GeoSPARQL&apos;s geof:sfOverlaps filter function.</rdfs:comment>
        <shacl:parameter>
            <rdf:Description>
                <shacl:path rdf:resource="http://foo.bar/geoshacl#overlaps"/>
            </rdf:Description>
        </shacl:parameter>
        <shacl:validator rdf:nodeID="genid14"/>
    </owl:NamedIndividual>
    <rdf:Description rdf:nodeID="genid14">
        <rdf:type rdf:resource="http://www.w3.org/ns/shacl#SPARQLAskValidator"/>
        <shacl:ask>
            PREFIX geo: &lt;http://www.opengis.net/ont/geosparql#&gt;
            PREFIX geof: &lt;http://www.opengis.net/def/function/geosparql/&gt;
            ASK {
				{
    	        	FILTER( geof:sfOverlaps($value, $overlaps) )
        	    }
        	    UNION
        	    {
        	    	FILTER( isIRI($overlaps) )
        	    	$this $overlaps ?otherValue .
        	    	FILTER( geof:sfOverlaps($value, ?otherValue) )
        	    }
            }
        </shacl:ask>
        <shacl:message>Value does not overlap with {$overlaps}.</shacl:message>
    </rdf:Description>
    


    <!-- http://foo.bar/geoshacl#touchesConstraint -->


    <owl:NamedIndividual rdf:about="http://foo.bar/geoshacl#touchesConstraint">
        <rdf:type rdf:resource="http://www.w3.org/ns/shacl#ConstraintComponent"/>
        <rdfs:comment>An implementation of the &quot;touches&quot; relationship between two geometries as per the Simple Feature Access standard. It is implemented using GeoSPARQL&apos;s geof:sfTouches filter function.</rdfs:comment>
        <shacl:parameter>
            <rdf:Description>
                <shacl:path rdf:resource="http://foo.bar/geoshacl#touches"/>
            </rdf:Description>
        </shacl:parameter>
        <shacl:validator rdf:nodeID="genid16"/>
    </owl:NamedIndividual>
    <rdf:Description rdf:nodeID="genid16">
        <rdf:type rdf:resource="http://www.w3.org/ns/shacl#SPARQLAskValidator"/>
        <shacl:ask>
            PREFIX geo: &lt;http://www.opengis.net/ont/geosparql#&gt;
            PREFIX geof: &lt;http://www.opengis.net/def/function/geosparql/&gt;
            ASK {
				{
    	        	FILTER( geof:sfTouches($value, $touches) )
        	    }
        	    UNION
        	    {
        	    	FILTER( isIRI($touches) )
        	    	$this $touches ?otherValue .
        	    	FILTER( geof:sfTouches($value, ?otherValue) )
        	    }
            }
        </shacl:ask>
        <shacl:message>Value does not touch {$touches}.</shacl:message>
    </rdf:Description>
    


    <!-- http://foo.bar/geoshacl#withinConstraint -->


    <owl:NamedIndividual rdf:about="http://foo.bar/geoshacl#withinConstraint">
        <rdf:type rdf:resource="http://www.w3.org/ns/shacl#ConstraintComponent"/>
        <rdfs:comment>An implementation of the &quot;within&quot; relationship between two geometries as per the Simple Feature Access standard. It is implemented using GeoSPARQL&apos;s geof:sfWithin filter function.</rdfs:comment>
        <shacl:parameter>
            <rdf:Description>
                <shacl:path rdf:resource="http://foo.bar/geoshacl#within"/>
            </rdf:Description>
        </shacl:parameter>
        <shacl:validator rdf:nodeID="genid18"/>
    </owl:NamedIndividual>
    <rdf:Description rdf:nodeID="genid18">
        <rdf:type rdf:resource="http://www.w3.org/ns/shacl#SPARQLAskValidator"/>
        <shacl:ask>
            PREFIX geo: &lt;http://www.opengis.net/ont/geosparql#&gt;
            PREFIX geof: &lt;http://www.opengis.net/def/function/geosparql/&gt;
            ASK {
				{
    	        	FILTER( geof:sfWithin($value, $within) )
        	    }
        	    UNION
        	    {
        	    	FILTER( isIRI($within) )
        	    	$this $within ?otherValue .
        	    	FILTER( geof:sfWithin($value, ?otherValue) )
        	    }
            }
        </shacl:ask>
        <shacl:message>Value is not within {$within}.</shacl:message>
    </rdf:Description>
</rdf:RDF>



<!-- Generated by the OWL API (version 5.1.14) https://github.com/owlcs/owlapi/ -->


